syntax = "proto3";
package user;
import "google/protobuf/empty.proto";

enum SexType {
  man = 0;
  women = 1;
}

// create user
message CreateUserRequest {
  // grpc-gateway: {"miss_default": true, "example": "10086", "title": "UID", "description": "user union id"}
  string uid = 1;
  // grpc-gateway: {"description": "user name"}
  // grpc-gateway: {"default": "", "min_length": 1, "max_length": "10", "example": "so1n"}
  string user_name = 2;
  // grpc-gateway: {"description": "user password"}
  // grpc-gateway: {"alias": "pw", "min_length": 6, "max_length": 18, "example": "123456"}
  string password = 3;
  SexType sex = 4;
}

// delete user
message DeleteUserRequest {
  string uid = 1;
}

// login user
message LoginUserRequest {
  string uid = 1;
  string password = 2;
}
message LoginUserResult {
  // grpc-gateway: {"example": "10086", "title": "UID", "description": "user union id"}
  string uid = 1;
  // grpc-gateway: {"description": "user name"}
  // grpc-gateway: {"default": "", "min_length": 1, "max_length": "10", "example": "so1n"}
  string user_name = 2;
  // grpc-gateway: {"description": "user token"}
  string token = 3;
}

// logout user
message LogoutUserRequest {
  string uid = 1;
  // grpc-gateway: {"enable": false}
  string token = 2;
}

message GetUidByTokenRequest {
  string token = 1;
}
message GetUidByTokenResult {
  string uid = 1;
}

// grpc-gateway: {"group": "user", "tag": [["grpc-user", "grpc_user_service"]]}
service User {
  // The interface should not be exposed for external use
  // grpc-gateway: {"enable": false}
  rpc get_uid_by_token (GetUidByTokenRequest) returns (GetUidByTokenResult);
  // grpc-gateway: {"summary": "User exit from the system", "url": "/user/logout"}
  rpc logout_user (LogoutUserRequest) returns (google.protobuf.Empty);
  // grpc-gateway: {"summary": "User login to system", "url": "/user/login"}
  rpc login_user(LoginUserRequest) returns (LoginUserResult);
  // grpc-gateway: {"tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
  // grpc-gateway: {"summary": "Create users through the system", "url": "/user/create"}
  rpc create_user(CreateUserRequest) returns (google.protobuf.Empty);
  // grpc-gateway: {"url": "/user/delete", "tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
  // grpc-gateway: {"desc": "This interface performs a logical delete, not a physical delete"}
  rpc delete_user(DeleteUserRequest) returns (google.protobuf.Empty);
}
