"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import example.grpc_proto.example_proto.user.user_pb2
import google.protobuf.empty_pb2
import grpc

class UserStub:
    """grpc-gateway: {"group": "user", "tag": [["grpc-user", "grpc_user_service"]]}"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    get_uid_by_token: grpc.UnaryUnaryMultiCallable[
        example.grpc_proto.example_proto.user.user_pb2.GetUidByTokenRequest,
        example.grpc_proto.example_proto.user.user_pb2.GetUidByTokenResult]
    """The interface should not be exposed for external use
    grpc-gateway: {"enable": false}
    """

    logout_user: grpc.UnaryUnaryMultiCallable[
        example.grpc_proto.example_proto.user.user_pb2.LogoutUserRequest,
        google.protobuf.empty_pb2.Empty]
    """grpc-gateway: {"summary": "User exit from the system", "url": "/user/logout"}"""

    login_user: grpc.UnaryUnaryMultiCallable[
        example.grpc_proto.example_proto.user.user_pb2.LoginUserRequest,
        example.grpc_proto.example_proto.user.user_pb2.LoginUserResult]
    """grpc-gateway: {"summary": "User login to system", "url": "/user/login"}"""

    create_user: grpc.UnaryUnaryMultiCallable[
        example.grpc_proto.example_proto.user.user_pb2.CreateUserRequest,
        google.protobuf.empty_pb2.Empty]
    """grpc-gateway: {"tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
    grpc-gateway: {"summary": "Create users through the system", "url": "/user/create"}
    """

    delete_user: grpc.UnaryUnaryMultiCallable[
        example.grpc_proto.example_proto.user.user_pb2.DeleteUserRequest,
        google.protobuf.empty_pb2.Empty]
    """grpc-gateway: {"url": "/user/delete", "tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
    grpc-gateway: {"desc": "This interface performs a logical delete, not a physical delete"}
    """


class UserServicer(metaclass=abc.ABCMeta):
    """grpc-gateway: {"group": "user", "tag": [["grpc-user", "grpc_user_service"]]}"""
    @abc.abstractmethod
    def get_uid_by_token(self,
        request: example.grpc_proto.example_proto.user.user_pb2.GetUidByTokenRequest,
        context: grpc.ServicerContext,
    ) -> example.grpc_proto.example_proto.user.user_pb2.GetUidByTokenResult:
        """The interface should not be exposed for external use
        grpc-gateway: {"enable": false}
        """
        pass

    @abc.abstractmethod
    def logout_user(self,
        request: example.grpc_proto.example_proto.user.user_pb2.LogoutUserRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """grpc-gateway: {"summary": "User exit from the system", "url": "/user/logout"}"""
        pass

    @abc.abstractmethod
    def login_user(self,
        request: example.grpc_proto.example_proto.user.user_pb2.LoginUserRequest,
        context: grpc.ServicerContext,
    ) -> example.grpc_proto.example_proto.user.user_pb2.LoginUserResult:
        """grpc-gateway: {"summary": "User login to system", "url": "/user/login"}"""
        pass

    @abc.abstractmethod
    def create_user(self,
        request: example.grpc_proto.example_proto.user.user_pb2.CreateUserRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """grpc-gateway: {"tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
        grpc-gateway: {"summary": "Create users through the system", "url": "/user/create"}
        """
        pass

    @abc.abstractmethod
    def delete_user(self,
        request: example.grpc_proto.example_proto.user.user_pb2.DeleteUserRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """grpc-gateway: {"url": "/user/delete", "tag": [["grpc-user", "grpc_user_service"], ["grpc-user-system", "grpc_user_service"]]}
        grpc-gateway: {"desc": "This interface performs a logical delete, not a physical delete"}
        """
        pass


def add_UserServicer_to_server(servicer: UserServicer, server: grpc.Server) -> None: ...
